#!/usr/bin/env bash
set -euo pipefail

REPO_DIR="/opt/airplay_wyse"
STATE_DIR="/var/lib/airplay_wyse"

# Read-only viewer: prints last-health.json if available and augments with quick probes

echo "=== AirPlay Wyse Health ==="

if [[ -f "$STATE_DIR/last-health.json" ]]; then
  if command -v jq >/dev/null 2>&1; then
    jq . "$STATE_DIR/last-health.json" 2>/dev/null || cat "$STATE_DIR/last-health.json"
  else
    cat "$STATE_DIR/last-health.json"
  fi
else
  echo "No last-health.json present"
fi

echo
echo "--- Runtime probes ---"
if command -v shairport-sync >/dev/null 2>&1; then
  shairport-sync -V 2>&1 | head -1 | sed 's/^/shairport: /'
fi
if systemctl list-unit-files --type=service --no-legend 2>/dev/null | awk '{print $1}' | grep -qx "nqptp.service"; then
  systemctl is-active --quiet nqptp 2>/dev/null && echo "nqptp: active" || echo "nqptp: inactive"
fi
if command -v avahi-browse >/dev/null 2>&1; then
  timeout 5 avahi-browse -rt _airplay._tcp 2>/dev/null | grep -q "_airplay._tcp" && echo "mdns: _airplay visible" || echo "mdns: _airplay not visible"
fi

exit 0
