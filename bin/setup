#!/usr/bin/env bash
set -euo pipefail

# One-time setup for AirPlay Wyse (least-privilege model)
# - Installs shairport-sync (AirPlay 2) and nqptp
# - Installs hardened systemd override for shairport-sync
# - Writes /etc/shairport-sync.conf from a minimal template
# - Enables and starts nqptp + shairport-sync

# Resolve repo dir relative to this script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
REPO_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"
TEMPLATE_MIN="$REPO_DIR/cfg/shairport-sync.minimal.conf.tmpl"
TARGET_CONF="/etc/shairport-sync.conf"
SH_OVERRIDE_SRC="$REPO_DIR/systemd/overrides/shairport-sync.service.d/override.conf"
SH_OVERRIDE_DIR="/etc/systemd/system/shairport-sync.service.d"
SH_OVERRIDE_DEST="$SH_OVERRIDE_DIR/override.conf"

log() { echo "$(date --iso-8601=seconds) [setup] $*"; }
die() { echo "[setup] ERROR: $*" >&2; exit 1; }

require_root() { [[ "$(id -u)" -eq 0 ]] || die "must be run as root"; }

ensure_pkg() {
  local pkg="$1"
  if ! dpkg -s "$pkg" >/dev/null 2>&1; then
    log "installing package: $pkg"
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y "$pkg"
  fi
}

have_airplay2() {
  if command -v shairport-sync >/dev/null 2>&1; then
    shairport-sync -V 2>&1 | grep -q "AirPlay2" && return 0 || return 1
  fi
  return 1
}

install_build_deps_common() {
  apt-get update -y
  DEBIAN_FRONTEND=noninteractive apt-get install -y \
    build-essential git autoconf automake libtool pkg-config
}

install_build_deps_shairport() {
  DEBIAN_FRONTEND=noninteractive apt-get install -y \
    libconfig-dev libpopt-dev libasound2-dev libavahi-client-dev \
    libssl-dev libsoxr-dev libplist-dev libsodium-dev libgcrypt20-dev \
    libavutil-dev libavcodec-dev libavformat-dev libswresample-dev \
    uuid-dev vim-common
}

install_build_deps_nqptp() {
  # Provided by common deps; retained for clarity and future additions
  :
}

build_from_source() {
  local repo_url="$1" name="$2" cfg_args="$3"
  install_build_deps_common
  local work
  work=$(mktemp -d)
  trap 'rm -rf "$work"' RETURN
  log "building $name from source in $work"
  (cd "$work" && git clone "$repo_url" "$name")
  (cd "$work/$name" && autoreconf -fi && ./configure $cfg_args && make -j"$(nproc)" && make install)
}

ensure_nqptp() {
  if systemctl list-unit-files --type=service --no-legend 2>/dev/null | awk '{print $1}' | grep -qx "nqptp.service"; then
    log "nqptp already present"
    return 0
  fi
  log "installing nqptp (package or source)"
  if DEBIAN_FRONTEND=noninteractive apt-get install -y nqptp >/dev/null 2>&1; then
    log "nqptp package installed"
  else
    log "nqptp package unavailable; building from source"
    install_build_deps_nqptp
    build_from_source "https://github.com/mikebrady/nqptp.git" "nqptp" "--with-systemd-startup"
  fi
  systemctl daemon-reload
  systemctl enable --now nqptp.service
}

ensure_shairport_ap2() {
  if have_airplay2; then
    log "shairport-sync with AirPlay 2 already installed"
    return 0
  fi
  log "installing shairport-sync (package or source with AirPlay 2)"
  if DEBIAN_FRONTEND=noninteractive apt-get install -y shairport-sync >/dev/null 2>&1; then
    if have_airplay2; then
      log "shairport-sync package provides AirPlay 2"
      return 0
    else
      log "package shairport-sync lacks AirPlay 2; building from source"
    fi
  else
    log "shairport-sync package unavailable; building from source"
  fi
  install_build_deps_shairport
  build_from_source "https://github.com/mikebrady/shairport-sync.git" "shairport-sync" \
    "--sysconfdir=/etc --with-alsa --with-avahi --with-ssl=openssl --with-soxr --with-airplay-2 --with-systemd --with-systemdsystemunitdir=/usr/lib/systemd/system"
}

ensure_execstart_for_local_build() {
  # If /usr/local/bin/shairport-sync exists and has AirPlay2, ensure ExecStart points to it
  if [[ -x "/usr/local/bin/shairport-sync" ]] && /usr/local/bin/shairport-sync -V 2>&1 | grep -q "AirPlay2"; then
    local dropin_dir="/etc/systemd/system/shairport-sync.service.d"
    install -d -m 0755 "$dropin_dir"
    cat >"$dropin_dir/execstart.conf" <<'EOF'
[Service]
ExecStart=
ExecStart=/usr/local/bin/shairport-sync --log-to-syslog
EOF
    systemctl daemon-reload
    log "configured ExecStart override to use /usr/local/bin/shairport-sync"
  fi
}

render_conf() {
  local name="$1" device="$2" mixer="$3" iface="$4" hwaddr="$5"
  [[ -f "$TEMPLATE_MIN" ]] || die "missing template: $TEMPLATE_MIN"

  # Render variables
  local tmp
  tmp=$(mktemp)
  sed \
    -e "s/{{AIRPLAY_NAME}}/${name//\//\/}/g" \
    -e "s/{{ALSA_DEVICE}}/${device//\//\/}/g" \
    -e "s/{{ALSA_MIXER}}/${mixer//\//\/}/g" \
    -e "s/{{AVAHI_IFACE}}/${iface//\//\/}/g" \
    -e "s/{{HW_ADDR}}/${hwaddr//\//\/}/g" \
    "$TEMPLATE_MIN" > "$tmp"
  # Drop optional mixer line if empty
  if [[ -z "$mixer" ]]; then
    grep -v 'mixer_control_name' "$tmp" > "${tmp}.2" && mv "${tmp}.2" "$tmp"
  fi
  # Drop interface line if empty
  if [[ -z "$iface" ]]; then
    grep -v '^[[:space:]]*interface[[:space:]]*=' "$tmp" > "${tmp}.2" && mv "${tmp}.2" "$tmp"
  fi
  # Drop hardware address line if empty
  if [[ -z "$hwaddr" ]]; then
    grep -v '^[[:space:]]*hardware_address[[:space:]]*=' "$tmp" > "${tmp}.2" && mv "${tmp}.2" "$tmp"
  fi
  install -m 0644 "$tmp" "$TARGET_CONF"
  rm -f "$tmp"
}

install_override() {
  if [[ -f "$SH_OVERRIDE_SRC" ]]; then
    install -d -m 0755 "$SH_OVERRIDE_DIR"
    install -m 0644 "$SH_OVERRIDE_SRC" "$SH_OVERRIDE_DEST"
    systemctl daemon-reload
  fi
}

main() {
  require_root
  command -v systemctl >/dev/null 2>&1 || die "systemd is required"

  local name device mixer iface
  name="${AIRPLAY_NAME:-Wyse DAC}"
  mixer="${ALSA_MIXER:-}"
  iface="${AVAHI_IFACE:-}"
  local hwaddr="${HW_ADDR:-}"

  # Determine ALSA device: prefer explicit env, else alsa-probe, else hw:0,0
  if [[ -n "${ALSA_DEVICE:-}" ]]; then
    device="$ALSA_DEVICE"
  elif [[ -x "$REPO_DIR/bin/alsa-probe" ]]; then
    device="$($REPO_DIR/bin/alsa-probe || true)"
    device="${device:-hw:0,0}"
  else
    device="hw:0,0"
  fi

  log "ensuring AirPlay 2 stack (shairport-sync + nqptp)"
  ensure_nqptp
  ensure_shairport_ap2

  log "installing shairport-sync override (hardened + nqptp ordering)"
  install_override
  ensure_execstart_for_local_build

  # Derive hardware address from iface if not explicitly provided
  if [[ -z "$hwaddr" && -n "${iface:-}" ]]; then
    hwaddr=$(cat "/sys/class/net/$iface/address" 2>/dev/null | head -n1 || true)
  fi

  log "writing $TARGET_CONF (name='$name', device='$device'${iface:+, iface='$iface'}${hwaddr:+, hwaddr='$hwaddr'})"
  render_conf "$name" "$device" "${mixer:-}" "${iface:-}" "${hwaddr:-}"

  log "enabling and starting services"
  systemctl enable --now nqptp.service || log "nqptp not present; skipping enable"
  systemctl enable --now shairport-sync.service

  log "done"
}

main "$@"
