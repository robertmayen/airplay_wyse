#!/usr/bin/env bash
set -euo pipefail

# Bootstrap privileged configuration for AirPlay Wyse
# - Install sudoers NOPASSWD for airplay â†’ systemd-run
# - Install /usr/local/sbin/airplay-sd-run wrapper
# - Validate privileges work
# Idempotent; safe to run multiple times.

REPO_DIR="/opt/airplay_wyse"
STATE_DIR="/var/lib/airplay_wyse"
MARKER="$STATE_DIR/bootstrap.ok"
LOG_FILE="/var/log/airplay-bootstrap.log"

log() { echo "$(date -u +%Y-%m-%dT%H:%M:%SZ) [bootstrap] $*" | tee -a "$LOG_FILE" >&2; }

run_cmd() {
  # run_cmd <desc> -- <cmd...>
  local desc="$1"; shift; [[ "${1:-}" == "--" ]] && shift || true
  log "RUN: $desc :: $*"
  set +e
  eval "$@" >>"$LOG_FILE" 2>&1
  local rc=$?
  set -e
  log "RC=$rc CMD: $desc"
  return $rc
}

require_root() {
  if [[ $(id -u) -ne 0 ]]; then
    log "must run as root"
    exit 1
  fi
}

ensure_state_dir() { mkdir -p "$STATE_DIR" 2>/dev/null || true; }

ensure_airplay_group_membership() {
  # Ensure 'airplay' user exists and is in an elevated group (sudo/wheel)
  if ! id -u airplay >/dev/null 2>&1; then
    log "CRITICAL: user 'airplay' not found"
    return 1
  fi
  local grp="sudo"
  if ! getent group "$grp" >/dev/null 2>&1; then
    if getent group wheel >/dev/null 2>&1; then
      grp="wheel"
    else
      grp=""
    fi
  fi
  if [[ -z "$grp" ]]; then
    log "WARNING: neither 'sudo' nor 'wheel' group exists; skipping group membership update"
    return 0
  fi
  if id -nG airplay | tr ' ' '\n' | grep -qx "$grp"; then
    log "airplay already in $grp group"
    return 0
  fi
  # Pre-state
  log "groups(airplay)/before: $(id -nG airplay 2>/dev/null || true)"
  if run_cmd "usermod add airplay to $grp" -- "usermod -a -G '$grp' airplay"; then
    # Re-check membership in a fresh view
    if id -nG airplay | tr ' ' '\n' | grep -qx "$grp"; then
      log "groups(airplay)/after: $(id -nG airplay 2>/dev/null || true)"
      log "airplay user added to $grp group"
      return 0
    fi
    log "WARNING: could not confirm $grp membership for airplay after update"
    return 1
  else
    log "CRITICAL: failed to add airplay to $grp group"
    return 1
  fi
}

install_sudoers() {
  local sdfile=/etc/sudoers.d/airplay-wyse
  install -d -m 0755 /etc/sudoers.d
  local tmp; tmp=$(mktemp)
  {
    printf '# AirPlay Wyse privilege model (NOPASSWD for constrained helpers)\n'
    printf 'Defaults:airplay !requiretty\n'
    printf 'airplay ALL=(root) NOPASSWD: /usr/local/sbin/airplay-sd-run\n'
    printf 'airplay ALL=(root) NOPASSWD: /usr/bin/systemd-run\n'
  } >"$tmp"
  install -o root -g root -m 0440 "$tmp" "$sdfile"
  rm -f "$tmp"
  if command -v visudo >/dev/null 2>&1; then
    if ! run_cmd "visudo check $sdfile" -- "visudo -cf '$sdfile'"; then
      log "CRITICAL: visudo validation failed for $sdfile"
      return 1
    fi
  fi
  log "sudoers configured at $sdfile perms=$(stat -c %a "$sdfile" 2>/dev/null || stat -f %Lp "$sdfile" 2>/dev/null || echo)"
}

check_includedir() {
  if ! grep -Eq '^[^#]*includedir\s+/etc/sudoers\.d' /etc/sudoers 2>/dev/null; then
    log "WARNING: /etc/sudoers missing 'includedir /etc/sudoers.d'; drop-ins may be ignored"
  fi
}

install_wrapper() {
  local src="$REPO_DIR/scripts/airplay-sd-run"
  local dst=/usr/local/sbin/airplay-sd-run
  if [[ -f "$src" ]]; then
    install -o root -g root -m 0755 "$src" "$dst"
    log "wrapper installed at $dst perms=$(stat -c %a "$dst" 2>/dev/null || stat -f %Lp "$dst" 2>/dev/null || echo)"
  else
    log "wrapper missing at $src"
  fi
}

validate_privs() {
  if ! id -u airplay >/dev/null 2>&1; then
    log "airplay user missing; cannot validate"
    return 1
  fi
  if run_cmd "sudo test systemd-run" -- "sudo -u airplay -n sudo -n /usr/bin/systemd-run --version"; then
    log "sudo configuration successful"
    # Also test wrapper path if present
    if [[ -x /usr/local/sbin/airplay-sd-run ]]; then
      run_cmd "sudo test wrapper" -- "sudo -u airplay -n /usr/local/sbin/airplay-sd-run svc-restart -- /bin/true" || true
    fi
    return 0
  fi
  log "sudo configuration failed"
  return 1
}

main() {
  require_root
  ensure_state_dir
  ensure_airplay_group_membership
  install_sudoers
  check_includedir
  install_wrapper
  if validate_privs; then
    date -u +%Y-%m-%dT%H:%M:%SZ >"$MARKER" 2>/dev/null || true
    log "bootstrap complete"
  else
    log "bootstrap validation failed"
    exit 1
  fi
}

main "$@"
