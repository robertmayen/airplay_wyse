#!/usr/bin/env bash
set -euo pipefail

QUEUE=/run/airplay/queue
LOG_TAG=airplay-broker

log() { systemd-cat -t "$LOG_TAG" echo "$*"; }

is_allowed() {
  # enforce absolute binaries and minimal patterns
  case "$1" in
    /usr/bin/apt-get)
      shift
      [ "${1:-}" = "-y" ] && [ "${2:-}" = "install" ] && exit 0 || true
      ;;
    /usr/bin/dpkg)
      shift
      [ "${1:-}" = "-i" ] && [[ "${2:-}" == /opt/airplay_wyse/pkg/*.deb ]] && exit 0 || true
      ;;
    /usr/bin/systemctl)
      shift
      # allow only restarts of our stack
      [ "${1:-}" = "restart" ] && [[ "${2:-}" == airplay-* ]] && exit 0 || true
      ;;
    /usr/bin/install)
      shift
      # allow only creation of apt preferences dir
      [ "${1:-}" = "-d" ] && [ "${2:-}" = "-m" ] && [ "${3:-}" = "0755" ] && [ "${4:-}" = "/etc/apt/preferences.d" ] && exit 0 || true
      ;;
    /usr/bin/tee)
      shift
      # allow only writing to apt preferences files
      [[ "${1:-}" == /etc/apt/preferences.d/*.pref ]] && exit 0 || true
      ;;
  esac
  exit 1
}

process_one() {
  local f="$1"; local okf="${f%.cmd}.ok"; local errf="${f%.cmd}.err"
  local inf="${f%.cmd}.in"
  local line; line="$(cat "$f")"
  # shellcheck disable=SC2206
  args=( $line )
  if is_allowed "${args[@]}"; then :; else echo "DENY: $line" >"$errf"; rm -f "$f"; return 0; fi
  if [[ "${args[0]}" == "/usr/bin/tee" && -f "$inf" ]]; then
    if "${args[@]}" <"$inf" 2> >(tee "$errf".tmp >&2); then
      : > "$okf"; rm -f "$errf".tmp "$inf"
    else
      mv "$errf".tmp "$errf"
    fi
    rm -f "$f"; return 0
  fi
  if "${args[@]}" 2> >(tee "$errf".tmp >&2); then
    : > "$okf"
    rm -f "$errf".tmp
  else
    mv "$errf".tmp "$errf"
  fi
  rm -f "$f"
}

run_pending() {
  shopt -s nullglob
  for f in "$QUEUE"/*.cmd; do process_one "$f"; done
}

run_pending
